import os
import platform
import re
import gbls
from nvd import NvdCpe, NvdCve
from format_cpe import FormatCpe
from cve_matcher import CVEMatcher
from cpe_matcher import GeotabInventory
import datetime
import sys
import geotab


def main():

    # Download cpe dictionary####################################

    cpe = NvdCpe()
    cpe.download_cpe()
    cpe.read()
    #cpe.save()  # save df_cpe4 in pkl file

    # Format cpe to have wfn########################################
    df_cpe = cpe.get()  # get a copy of df_cpe4
    format_cpe = FormatCpe()
    format_cpe= FormatCpe()
    formatted_cpe_database = format_cpe.format_cpe_df(df_cpe)  # (columns=['uri','wfn','formatted_string'])

    # Find cpes mapped to geotab assets ##########################
    geotab_inventory = orgbInventory(formatted_cpe_database)
    # read list of all assets in Geotab
    geotab_inventory.update_assets_list()
    # clean assets name, vendor and version
    geotab_inventory.format_assets()
    df_assets = geotab_inventory.get_assets()

    # Download CVEs for last seven days ###########################
    cve_database = NvdCve()
    cve_database.download_cve()
    cve_database.read()
    cve_database.save()
    cve_database.load()
    df_cves = cve_database.get()

    # Find cves for assets ##########################################
    cve_matcher = CVEMatcher(df_assets, df_cves)
    cve_matcher.find_matched_cves_to_assets()
    cve_matcher.save_matched_cves()
    cve_matcher.save_matched_assets()

    return


if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        print(e)
    else:
        print("finished")

